pipeline {
    agent any
    environment {
        AWS_DEFAULT_REGION = 'eu-central-1'
        AWS_ACCOUNT_ID="279732636171"
        IMAGE_REPO_NAME = 'nodejs'
        IMAGE_TAG = 'latest'
        REPOSITORY_URI = "279732636171.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com/${IMAGE_REPO_NAME}"
    }
    
    parameters {
        string(name: 'GIT_BRANCH_OR_TAG', description: 'Enter the Git branch or tag', defaultValue: 'main')
    }
    
    stages {
        stage('Clone dockerfile and app.js') {
            steps {
                dir('/var/lib/jenkins/workspace/node_js') {
                    script {
                        // Перевіряємо, чи існує папка 'repo', і видаляємо її, якщо так
                        if (fileExists('repo')) {
                            sh 'rm -rf repo'
                        }

                        // Клонуємо лише Dokerfile і app.js
                        sh '''
                            git clone --depth 1 --branch main https://github.com/alehhillka/project_remember.git repo
                            cp repo/Dockerfile .
                            cp repo/app.js .
                            rm -rf repo
                        '''
                    }
                }
            }
        }

        // Building Docker images
        stage('Building image') {
            steps {
                script {
                    dockerImage = docker.build("${IMAGE_REPO_NAME}:${IMAGE_TAG}")
                }
            }
        }

        // Logging into AWS ECR
        stage('Logging into AWS ECR') {
            steps {
                script {
                    sh "aws ecr get-login-password --region ${AWS_DEFAULT_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_DEFAULT_REGION}.amazonaws.com"
                }
            }
        }

        // Pushing to ECR
        stage('Pushing to ECR') {
            steps {
                script {
                    sh "docker tag ${IMAGE_REPO_NAME}:${IMAGE_TAG} ${REPOSITORY_URI}:${IMAGE_TAG}"
                    sh "docker push ${REPOSITORY_URI}:${IMAGE_TAG}"
                }
            }
        }
    }
}
